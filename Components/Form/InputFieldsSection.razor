@using FormGenerator.Models
@using FormGenerator.Services.Interfaces
@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor

@inject IFormStateService FormState
@inject IFormValidationService Validator

@foreach (var field in InputFields)
{
    <MudItem xs="12" sm="6">
        @if (field.InputType == "number")
        {
            <MudNumericField T="int?"
                             Label="@field.Label"
                             Required="@field.IsRequired"
                             Min="@field.Min"
                             Max="@field.Max"
                             Value="@FormState.NumericValues[field.Id]"
                             ValueChanged="@((int? val) => FormState.UpdateNumericFieldValue(field, val))" />

            <ValidationMessage For="@(() => field.Value)" />
        }
        else if (field.InputType == "email")
        {
            <MudTextField @bind-Value="field.Value"
                          Label="@field.Label"
                          Required="@field.IsRequired"
                          InputType="InputType.Email"
                          Validation="@Validator.GetEmailValidator(field)" />

            <ValidationMessage For="@(() => field.Value)" />
        }
        else
        {
            <MudTextField @bind-Value="field.Value"
                          Label="@field.Label"
                          Required="@field.IsRequired" />

            <ValidationMessage For="@(() => field.Value)" />
        }
    </MudItem>
}

@code {
    /// <summary>
    /// Input fields to display
    /// </summary>
    [Parameter] public List<InputField> InputFields { get; set; } = new List<InputField>();
}